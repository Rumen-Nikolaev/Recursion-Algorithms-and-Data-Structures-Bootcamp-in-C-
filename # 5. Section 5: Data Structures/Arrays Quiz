Въпрос 1:
Какво е произволен достъп?
а) Вмъкване или премахване на елементи от началото на структурата от данни (например с индекс 0).
b) Вмъкване или премахване на елементи от края на структурата от данни (например с последния индекс).


Въпрос 2:
Какво е произволен достъп?
a) Произволен достъп означава, че можем да имаме достъп до елементи въз основа на техните индекси за O(1) постоянно време на работа, тъй като елементите са точно един до друг в паметта.
b) Произволен достъп означава, че елементите се съхраняват произволно в паметта.

Въпрос 3:
Има ли реална масивна структура от данни в Python (като структурата от данни в списъка)?
а) Да, списъците са масивни структури от данни.
b) За съжаление вградената в Python списъчна структура от данни не е истински масив, защото съхранява препратки (а не елементите точно един до друг) на различни места в паметта.

Въпрос 4:
Какъв е основният недостатък на масивите?
а) Трудно е да се съхраняват елементите от структурата на масива от данни.
б) Произволното индексиране понякога е изключително бавно
в) Трябва да се справяме с „дупки“ в структурата на данните, което означава преместване на много елементи, които могат да забавят операциите.

Въпрос 5:
Кога ще стигнем до алгоритъм O(N), що се отнася до масивите?
а) Когато сортираме масив.
б) Когато вмъкваме елементи в края на списъка.
в) Когато вмъкваме елементи в началото на масива.
